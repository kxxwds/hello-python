####输入一个整数数组，实现一个函数来调整该数组中数字的顺序，
####使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。
class Solution:
    def reOrderArray(self, array):
        # write code here
        a = len(array)
        b,c = [],[]
        for i in range(a):
            if array[i]%2 == 0:
                c.append(array[i])
            else:
                b.append(array[i])
        return b+c 
 #和上述思路相同但是更为简单的做法
 class Solution:
    def reOrderArray(self, array):
        # write code here
        b,c = [],[]
        for i in array:
            b.append(i) if i%2 == 1 else c.append(i)
        return b+c  
 ###利用sorted
 sorted(students, key=lambda student : student[2])   # sort by age 
 result = [('dave', 'B', 10), ('jane', 'B', 12), ('john', 'A', 15)]
 key，主要是用来进行比较的元素，只有一个参数，
 具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序，
 key一般结合lambada使用，lambada为匿名函数，由后面的参数决定排序的规则
解法：
 class Solution:
    def reOrderArray(self, array):
        # write code here
         return sorted(array,key=lambda c:c%2,reverse=True)   ##reverse=True表示降序，c%2==1要排在c%2==0前面等价奇数在前
         
