###从上往下打印出二叉树的每个节点，同层节点从左至右打印。
###思路：使用两个队列一个存放节点，一个存放值。先将根节点加入到队列中，
###然后遍历队列中的元素，遍历过程中，访问该元素的左右节点，再将左右子节点加入到队列中来
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回从上到下每个节点值列表，例：[1,2,3]
    def PrintFromTopToBottom(self, root):
        # write code here
        if not root:###root为空则返回空列表
            return []
        stack = []####存放每个节点
        result = []####存放节点的值
        stack.append(root)
        while len(stack) > 0:####stack相当于一个弹出序列
            node = stack.pop(0)####每次弹出顺序从左往右
            result.append(node.val)####node相当于一个中间传递
            if node.left:###每个上层节点的弹出，就意味着这个节点的下层的节点的填入stack作为储存
                stack.append(node.left)
            if node.right:
                stack.append(node.right)
        return result
