####把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。 
####例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
####比较大小一旦出现前一个比后一个大，则后一个就是最小的数字
class Solution:
    def minNumberInRotateArray(self, rotateArray):
        # write code here
        length = len(rotateArray)
        if length == 0:
            return 0
        elif length == 1:
            return rotateArray[0]
        else:
            for i in range(length-1):
                if rotateArray[i] > rotateArray[i+1]:
                    return rotateArray[i+1]
####min函数的使用
class Solution:
    def minNumberInRotateArray(self, rotateArray):
        # write code here
        if not rotateArray:
            return 0
        else:
            return min(rotateArray)
####sort函数的使用，先将列表从小到大的排序，然后输出第一个    
class Solution:
    def minNumberInRotateArray(self, rotateArray):
        # write code here
        if not rotateArray:
            return 0
        else:
            rotateArray.sort()
            return rotateArray[0]
####二分法  
class Solution:
    def minNumberInRotateArray(self, rotateArray):
        length = len(rotateArray)
        if length == 0:
            return 0
        elif length == 1:
            return rotateArray[0]
        else:
            left = 0
            right = length-1
            while left < right:
                mid = int((left+right)/2)
                if rotateArray[mid] > rotateArray[right]:
                      left = mid+1
                elif rotateArray[mid] < rotateArray[right]:
                      right = mid
                else:
                    left += 1#right -= 1
            return rotateArray[left]
                
